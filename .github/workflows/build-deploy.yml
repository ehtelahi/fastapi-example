name: Build and Deploy Code

on: [push, pull_request]

jobs:
    job1:
        environment: testing
        env:
            DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
            DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
            DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
            DATABASE_NAME:  ${{ secrets.DATABASE_NAME }}
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            ALGORITHM:  ${{ secrets.ALGORITHM }}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
                    POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
                    POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.9'

            - name: Update pip
              run: python -m pip install --upgrade pip

            - name: Install dependencies
              run: pip install -r requirements.txt

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi:latest
                  cache-from: type=registry,ref=user/app:latest
                  cache-to: type=inline